program hail;

{ Compute first 20 hailstone numbers }

var n, result: integer;

procedure hail(in: integer; var out: integer);
var count: integer;
begin
    count := 1;
    if in=1 then
        out := count
    else begin
        if (in div 2)*2 = in then
            hail(in div 2, count)
        else
            hail(3*in+1, count);
        out := count + 1
    end
end;

begin
    n := 1;
    while n < 21 do
    begin
        hail(n, result);
        write(result);
        write(' ');
        n := n+1
    end;
    writeln
end.

{ The answer should be 1 2 8 3 6 9 17 4 20 7 15 10 10 18 18 5 13 21 21 8 }
