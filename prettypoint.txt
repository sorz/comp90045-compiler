instance PrettyPrint ASTEmptyStatement where
      prettyPrint = " "

instance PrettyPrint ASTAssignmentStatement where
      prettyPrint ((AssignVariableAccess x), expression) = (prettyPrint x) ++ "=" ++ expression + "\n"
      prettyPrint ((AssignIdentifier y), expression) = (prettyPrint y) ++ "=" ++ expression + "\n"

  --procedure_statement
  --identifier [actual_parameter_list]
instance PrettyPrint ASTProcedureStatement where
      prettyPrint (id,(Nothing)) = prettyPrint id ++ "\n"
      prettyPrint (id, (Just  ASTActualParameterList)) = prettyPrint id ++ prettyPrint ASTActualParameterList ++ "\n"

--actual_parameter_list
-- : LEFT_PARENTHESIS expression {COMMA expression} RIGHT_PARENTHESIS
instance PrettyPrint ASTActualParameterList where
      prettyPrint (expression,[]) = "("  ++ expression ++ ")" 
      prettyPrint (expression, (x:xs)) = "(" ++ (prettyPrint expression) ++ (prettyPrint x) ++ ";" ++ (prettyPrint xs)  ++ ")"

--compound_statement
-- : BEGIN statement_sequence END
instance PrettyPrint ASTCompoundStatement where
    prettyPrint "begin" ++ "\n" + "    " ++ (prettyPrint ASTStatementSequence) ++ "\n" ++ "end" 

instance PrettyPrint ASTStatementSequence where 
    prettyPrint (x:[]) = x + "\n"
    prettyPrint ((x:xs)) = (prettyPrint x)  ++ "," ++ (prettyPrint xs) + "\n"

instance PrettyPrint ASTWhileStatement where
    prettyPrint (expression, statement) =
    prettyPrint "while " ++ expression ++ " do" ++ statement ++ "\n"
    
--for_statement
--FOR identifier ASSIGN expression (TO | DOWN_TO) expression DO statement
instance PrettyPrint ASTIfStatement where 
    prettyPrint  (expression, statement,statement,(Nothing))=
    prettyPrint "if " ++ (prettyPrint expression) ++ " then" ++ statement + "\n"
    prettyPrint (expression,statement,(Just statement)) =
    prettyPrint "if " ++ (prettyPrint expression) ++ " then" ++ statement ++ "\n" ++ statement

--type ASTAssignmentStatement = (AssignmentLeft, ASTExpression)
instance PrettyPrint ASTProcedureStatement where
    prettyPrint (id, param) = 
          (prettyPrint id) ++ (show param)
          
--for statements
instance PrettyPrint ASTForStatement where 
    prettyPrint (id , expression, expression,(ForTo x), statement) = 
          prettyPrint "for" ++ id ++ " = " ++ expression ++ x ++ expression ++ "\n"
    prettyPrint (id, expression, expression, (To y), statement) =
          prettyPrint "for" ++ id ++ " = " ++ expression ++ y ++ statement ++ "\n"